{
  "Description": "Create an EC2 instance by AWS CloudFormation",
  "Parameters": {
    "KeyName": {
      "MinLength": 1,
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "VPCId": {
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetId": {
      "Type": "AWS::EC2::Subnet::Id"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.micro"
    },
    "AvailabilityZone": {
      "Type": "String"
    },
    "BaseAmiId": {
      "Default": "ami-0ee25530d3bd7ef9c",
      "Type": "String"
    },
    "DomainAdminUsername": {
      "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
      "Type": "String",
      "Default": "installer"
    },
    "DomainAdminPassword": {
      "NoEcho": "true",
      "Description": "The Windows administrator account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41"
    },
    "DomainName": {
      "Description": "Fully qualified domain name (FQDN) of the forest root domain",
      "Type": "String",
      "Default": "test.com"
    },
    "VirtualMachineName": {
      "Description": "Netbios name for virtual machine",
      "Type": "String",
      "Default": "test"
    },
    "VolumeSize": {
      "Description": "Volume size of virtual machine",
      "Type": "String",
      "Default": "32"
    },
    "VolumeType": {
      "Description": "Volume type of virtual machine",
      "Type": "String",
      "Default": "gp2"
    },
    "SecurityGroupName": {
      "Description": "Name of security group to be created",
      "Type": "String"
    },
    "DNSServerIPAddress": {
      "Description": "IPv4 Address of DNS server",
      "Type": "String"
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Ref": "SecurityGroupName"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 3389,
            "ToPort": 3389,
            "CidrIp": "0.0.0.0/0",
            "Description": "For traffic from Internet"
          }
        ],
        "GroupDescription": "Security Group for demo server",
        "VpcId": {
          "Ref": "VPCId"
        }
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "createPSFile",
              "executePSFile",
              "finalise"
            ]
          },
          "createPSFile": {
            "files": {
              "c:\\cfn\\scripts\\installIIS.ps1": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "## Set DNS server\n\n",
                      "$adapter = Get-NetAdapter -Name 'Ethernet*'\n",
                      "Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ('",
                      {
                        "Ref": "DNSServerIPAddress"
                      },
                      "', '8.8.8.8')\n",
                      "## Join domain\n\n",
                      "if(!(Get-WmiObject -Class Win32_ComputerSystem).PartOfDomain){",
                      "$username = '",
                      {
                        "Ref": "DomainAdminUsername"
                      },
                      "'\n",
                      "$password = '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' | ConvertTo-SecureString -asPlainText -Force\n",
                      "$domain = '",
                      {
                        "Ref": "DomainName"
                      },
                      "'\n",
                      "$currentHostname = hostname\n",
                      "$newHostname = '",
                      {
                        "Ref": "VirtualMachineName"
                      },
                      "'\n",
                      "$credential = New-Object System.Management.Automation.PSCredential($username, $password)\n",
                      "Add-Computer -ComputerName $currentHostname -NewName $newHostname -DomainName $domain -Credential $credential -Restart -Force\n}",
                      "#Set-ExecutionPolicy -ExecutionPolicy Bypass -Force\n",
                      "Remove-Item -Path c:\\cfn\\scripts\\installIIS.ps1 -Force -ErrorAction SilentlyContinue",
                      "[Environment]::Exit(0)\n"
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            }
          },
          "executePSFile": {
            "commands": {
              "installIIS": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\installIIS.ps1"
                    ]
                  ]
                }
              }
            }
          },
          "finalise": {
            "commands": {
              "signal-success": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "cfn-signal.exe -e 0 --resource EC2Instance --stack ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      ""
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {
                "Ref": "VolumeSize"
              },
              "VolumeType": {
                "Ref": "VolumeType"
              }
            }
          }
        ],
        "ImageId": {
          "Ref": "BaseAmiId"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "Description": "Primary network interface",
            "DeviceIndex": "0",
            "SubnetId": {
              "Ref": "SubnetId"
            },
            "AssociatePublicIpAddress": true,
            "GroupSet": [
              {
                "Ref": "SecurityGroup"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " --resource EC2Instance",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "</script>\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT1H"
        }
      }
    }
  },
  "Outputs": {
    "publicIpAddress": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      },
      "Description": "Server's PublicIp Address"
    },
    "privateIpAddress": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PrivateIp"
        ]
      },
      "Description": "Server's PrivateIp Address"
    }
  }
}
